/*--------------------------------------------------------*
* Disciplina: Programaçao Estruturada e Modular *
*          Prof. Carlos Veríssimo                                    *
*--------------------------------------------------------*
* Objetivo do Programa: tirar as notas extremas e somar as centrais     *
* Data - 04/09/2024                                               * 
* Autor: Isabella Sanae Kiyatake*
*--------------------------------------------------------*/
#include <stdio.h>

#define MAX_NOTAS 100 
#define MAX_TESTES 100 

int main() {
    int N;
    float notas[MAX_NOTAS];
    float nota;
    int i;
    float min, max;
    int min_index, max_index;
    int continuar;
    float total_teste;
    float totais_testes[MAX_TESTES];
    int num_testes = 0;
    float total_geral = 0;

    do {
       
        total_teste = 0;
        min_index = max_index = -1;

        
        do {
            printf("\nInsira o valor de N: (OBS: N > 2) ");
            scanf("%d", &N);

            if (N <= 2) {
                printf("INSIRA NOVAMENTE! O VALOR DE N DEVE SER > 2!\n");
            }
        } while (N <= 2);

        
        for (i = 0; i < N; i++) {
            while (1) { 
                printf("Insira a %d� nota: ", i + 1);
                scanf("%f", &nota);

                if (nota >= 0 && nota <= 10) {
                    break; 
                } else {
                    printf("NOTA INV�LIDA! INSIRA NOVAMENTE!\n");
                }
            }
            notas[i] = nota;
        }
        
        
        printf("\nNotas inseridas:\n");
        for (i = 0; i < N; i++) {
            printf("%.2f ", notas[i]); 
        }
        printf("\n");

        
        if (N > 0) {
            min = max = notas[0];
            min_index = max_index = 0;

            
            for (i = 1; i < N; i++) {
                if (notas[i] < min) {
                    min = notas[i];
                    min_index = i;
                }
                if (notas[i] > max) {
                    max = notas[i];
                    max_index = i;
                }
            }

           
            if (min_index == -1 || max_index == -1) {
                printf("Erro: N�o foi poss�vel encontrar a menor ou a maior nota.\n");
                return 1;
            }

            
            float notas_restantes[MAX_NOTAS];
            int j = 0;

            
            for (i = 0; i < N; i++) {
                if (i != min_index && i != max_index) {
                    notas_restantes[j++] = notas[i];
                }
            }

           
            int N_restantes = j;
            
           
            printf("\nNotas restantes (sem a menor e a maior nota):\n");
            for (i = 0; i < N_restantes; i++) {
                printf("%.2f ", notas_restantes[i]);
            }
            printf("\n");
            
           
            for (i = 0; i < N_restantes; i++) {
                total_teste += notas_restantes[i]; // Adiciona as notas restantes ao total do teste
            }
            
            printf("\nTotal do Teste: %.2f", total_teste);
            
           
            total_geral += total_teste;
            totais_testes[num_testes] = total_teste;
            num_testes++;

           
            printf("\n\nDeseja realizar outro teste? (1 - Sim, 0 - N�o): ");
            scanf("%d", &continuar);


        } else {
            printf("Erro: O array de notas est� vazio.\n");
            return 1; 
        }
    } while (continuar);

    

    
    for (i = 0; i < num_testes; i++) {
        printf("Final do teste %d: %.2f\n", i + 1, totais_testes[i]);
    }
    printf("Total Geral: %.2f\n", total_geral);
    printf("N�mero de Testes: %d\n", num_testes);

    return 0;
}
